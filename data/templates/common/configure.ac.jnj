AC_PREREQ([2.69])


dnl ***********************************************************************
dnl Define Versioning Information
dnl ***********************************************************************
m4_define([{{ project.name }}_{{ plugin.name|replace("-", "_") }}_major_version],[0])
m4_define([{{ project.name }}_{{ plugin.name|replace("-", "_") }}_minor_version],[1])
m4_define([{{ project.name }}_{{ plugin.name|replace("-", "_") }}_micro_version],[0])
m4_define([{{ project.name }}_{{ plugin.name|replace("-", "_") }}_version],
          [{{ project.name }}_{{ plugin.name|replace("-", "_") }}_major_version.{{ project.name }}_{{ plugin.name|replace("-", "_") }}_minor_version.{{ project.name }}_{{ plugin.name|replace("-", "_") }}_micro_version])
m4_define([{{ project.name }}_{{ plugin.name|replace("-", "_") }}_interface_age],[0])
m4_define([{{ project.name }}_{{ plugin.name|replace("-", "_") }}_bugreport_url],
          [{{ plugin.bugreport_url }}])
m4_define([{{ project.name }}_{{ plugin.name|replace("-", "_") }}_debug_default],
          [m4_if(m4_eval({{ project.name }}_{{ plugin.name|replace("-", "_") }}_minor_version % 2), [1], [yes], [minimum])])


dnl ***********************************************************************
dnl Initialize Autoconf
dnl ***********************************************************************
AC_INIT([{{ project.name }}-{{ plugin.name }}],
        [{{ project.name }}_{{ plugin.name|replace("-", "_") }}_version]
        [{{ project.name }}_{{ plugin.name|replace("-", "_") }}_bugreport_url]
        [{{ project.name }}-{{ plugin.name }}]
        [{{ plugin.url }}])
AC_CONFIG_HEADERS([config.h])
AC_CONFIG_SRCDIR([src/{{ project.name }}-{{ plugin.name }}-{{ plugin.type }}.vala])
AC_CONFIG_MACRO_DIR([build/autotools])
AC_CONFIG_AUX_DIR([build])
AC_SUBST(ACLOCAL_AMFLAGS, "-I build/autotools")
AC_CANONICAL_HOST


dnl ***********************************************************************
dnl Initialize Automake
dnl ***********************************************************************
AM_SILENT_RULES([yes])
AM_INIT_AUTOMAKE([1.11 foreign subdir-objects tar-ustar no-dist-gzip dist-xz])
AM_MAINTAINER_MODE([enable])


dnl ***********************************************************************
dnl Internationalization
dnl ***********************************************************************
AX_REQUIRE_DEFINED([IT_PROG_INTLTOOL])
IT_PROG_INTLTOOL([0.50.1])
GETTEXT_PACKAGE=AC_PACKAGE_TARNAME
AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE], ["$GETTEXT_PACKAGE"], [GETTEXT package name])
AC_SUBST(GETTEXT_PACKAGE)
AM_GLIB_GNU_GETTEXT


dnl ***********************************************************************
dnl Check for Required Programs
dnl ***********************************************************************
AC_PROG_CC
AM_PROG_CC_STDC
AM_PROG_VALAC([0.30.0])
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_HEADER_STDC


dnl ***********************************************************************
dnl Check for Required Headers
dnl ***********************************************************************
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_LIB(m, floor, PACKAGE_LIBS="$PACKAGE_LIBS -lm",)


dnl ***********************************************************************
dnl Initialize Libtool
dnl ***********************************************************************
LT_PREREQ([2.2])
LT_INIT([dlopen disable-static])
LT_LIB_M


dnl ***********************************************************************
dnl Additional C Compiler Flags
dnl ***********************************************************************
AX_CHECK_COMPILE_FLAG([-Werror=unknown-warning-option], [
	ax_compiler_flags_test="-Werror=unknown-warning-option"
], [
	ax_compiler_flags_test=""
])
AX_APPEND_COMPILE_FLAGS([ \
	-Wall \
	-Wcast-align \
	-Wdeclaration-after-statement \
	-Werror=format-security \
	-Werror=format=2 \
	-Wextra \
	-Wmissing-include-dirs \
	-Wnested-externs \
	-Wno-missing-field-initializers \
	-Wno-sign-compare \
	-Wno-strict-aliasing \
	-Wno-uninitialized \
	-Wno-unused-parameter \
	-Wpointer-arith \
	-Wpointer-sign \
	-Wredundant-decls \
	-Wshadow \
	-Wswitch-default \
	-Wswitch-enum \
	-Wundef \
], [], [$ax_compiler_flags_test])
AC_C_CONST


dnl ***********************************************************************
dnl XXX Stuff I'm not sure of from here ...
dnl ***********************************************************************

AC_SUBST(abs_top_builddir)
dnl GResource
AC_PATH_PROG(GLIB_COMPILE_RESOURCES, glib-compile-resources)

AC_SET_DEFAULT_PATHS_SYSTEM

PREFIX=$prefix
AC_SUBST(PREFIX)

dnl ***********************************************************************
dnl XXX ... to here.
dnl ***********************************************************************


dnl ***********************************************************************
dnl Setup Debug and Tracing Support
dnl ***********************************************************************
AC_ARG_ENABLE(tracing,
              AS_HELP_STRING([--enable-tracing=@<:@no/yes@:>@],
                             [add extra debugging information @<:@default=no@:>@]),
              ,
              enable_tracing=no)
AS_IF([test "x$enable_tracing" = "xyes"],[enable_debug=yes ENABLE_TRACING=1],[ENABLE_TRACING=0])
AC_SUBST(ENABLE_TRACING)

AC_ARG_ENABLE(debug,
              AS_HELP_STRING([--enable-debug=@<:@no/minimum/yes@:>@],
                             [turn on debugging @<:@default={{ project.name }}_{{ plugin.name|replace("-", "_") }}_debug_default@:>@]),
              ,
              enable_debug={{ project.name }}_{{ plugin.name|replace("-", "_") }}_debug_default)
AS_CASE(["$enable_debug"],
        [yes],[
            DEBUG_CFLAGS="$DEBUG_CFLAGS -O0"
            DEBUG_CFLAGS="$DEBUG_CFLAGS -g"
        ],
        [minimum],[
            DEBUG_CFLAGS="$DEBUG_CFLAGS -DG_DISABLE_CAST_CHECKS"
        ],
        [no],[
            DEBUG_CFLAGS="$DEBUG_CFLAGS -DG_DISABLE_ASSERT"
            DEBUG_CFLAGS="$DEBUG_CFLAGS -DG_DISABLE_CHECKS"
            DEBUG_CFLAGS="$DEBUG_CFLAGS -DG_DISABLE_CAST_CHECKS"
        ],
        [])
AC_SUBST(DEBUG_CFLAGS)

BUGREPORT_URL={{ project.name }}_{{ plugin.name|replace("-", "_") }}_bugreport_url
AC_SUBST(BUGREPORT_URL)


dnl ***********************************************************************
dnl Check for Required Packages
dnl ***********************************************************************
{% block packages %}
m4_define([glib_required_version], [3.18.1])
m4_define([peas_required_version], [1.16.0])
{# Actual package check should only be called once so it goes in the template that extends this #}
{% endblock %}


dnl ***********************************************************************
dnl Check if we have WebKit support
dnl ***********************************************************************
m4_define([webkit_required_version], [2.12.0])
AC_ARG_ENABLE([webkit],
              [AS_HELP_STRING([--enable-webkit=@<:@yes/no/auto@:>@],
                              [Build with support for webkit.])],
              [enable_webkit=$enableval],
              [enable_webkit=auto])
AS_IF([test "$enable_webkit" != no],[
	PKG_CHECK_MODULES(WEBKIT,
	                  [webkit2gtk-web-extension-4.0 >= webkit_required_version],
	                  [have_webkit=yes],
	                  [have_webkit=no])

	AS_IF([test "$enable_webkit" = "yes" && "$have_webkit" = "no"],[
	       AC_MSG_ERROR([--enable-webkit requires webkit2gtk-4.0 >= webkit_required_version])
	])

	AC_SUBST([WEB_EXTENSION_DIR],[${libdir}/{{ project.name }}/extensions])

	enable_webkit=$have_webkit
])
AM_CONDITIONAL(ENABLE_WEBKIT, [test "x$enable_webkit" = "xyes"])


dnl ***********************************************************************
dnl Setup common cflags, valaflags and ldflags for plugins
dnl ***********************************************************************
{% block cflags %}
PLUGIN_CFLAGS="$PLUGIN_CFLAGS ${{ project.name|upper }}_{{ plugin.name|upper|replace("-", "_") }}_CFLAGS"
PLUGIN_CFLAGS="$PLUGIN_CFLAGS $DEBUG_CFLAGS"
{% endblock %}
AC_SUBST(PLUGIN_CFLAGS)

{% block ldflags %}
PLUGIN_LDFLAGS="$PLUGIN_LDFLAGS -avoid-version"
dnl PLUGIN_LDFLAGS="$PLUGIN_LDFLAGS -export-symbols-regex peas_register_types"
PLUGIN_LDFLAGS="$PLUGIN_LDFLAGS -module"
{% endblock %}
AC_SUBST(PLUGIN_LDFLAGS)

{% block valaflags %}
PLUGIN_VALAFLAGS="$PLUGIN_VALAFLAGS --target-glib=2.44"
PLUGIN_VALAFLAGS="$PLUGIN_VALAFLAGS --thread"
PLUGIN_VALAFLAGS="$PLUGIN_VALAFLAGS --pkg libpeas-1.0"
{% endblock %}
AC_SUBST(PLUGIN_VALAFLAGS)


dnl ***********************************************************************
dnl Process .in Files
dnl ***********************************************************************
AC_CONFIG_FILES([
    Makefile
    src/Makefile
    src/{{ plugin.name }}.plugin
    po/Makefile.in
])
AC_OUTPUT


AC_MSG_NOTICE([

    $PACKAGE $VERSION

	Options

     Prefix: ...................................... : ${prefix}
     Libdir: ...................................... : ${libdir}
     WebKit: ...................................... : ${enable_webkit}

	Development Options

     Enable Debug: ................................ : ${enable_debug}

    $PACKAGE will be installed in ${PLUGIN_DIR}
])
